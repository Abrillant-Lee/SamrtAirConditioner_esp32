#include <Arduino.h>
#include "infrared.h"
#include "mqtt.h"
// put function declarations here:

//#define Ir_Serial Serial1

extern PubSubClient client;
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Ir_Serial.begin(9600, SERIAL_8N1, 16, 17);
  
  //initMQTTClient();
}

void loop() 
{
  uint8_t buf[512];     //512
  byte group_on[] = {0xF5,0x08,0xAD,0x04,0x53,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x57,0x3C,0x53,0xCF,0x01,0x54,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x57,0x3C,0x57,0x3C,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x30,0x53,0x40,0x53,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0xD0,0x01,0x53,0x40,0x53,0x40,0x53,0xD0,0x01,0x52,0x40,0x4E,0xE2,0x13,0x48,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x58,0x3B,0x58,0x3B,0x58,0x3A,0x58,0x3A,0x59,0x3A,0x59,0xCA,0x01,0x59,0x39,0x5A,0x39,0x59,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x38,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0xC8,0x01,0x5A,0xC8,0x01,0x5A,0xA7,0x27,0xF2,0x08,0xB0,0x04,0x53,0xCF,0x01,0x53,0x3F,0x53,0x30,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC8,0x01,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5A,0x38,0x5A,0xD6,0x13,0x53,0x38,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x59,0x39,0x59,0x39,0x5A,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0xC9,0x01,0x52,0xD0,0x01,0x59};
  int dataLen = sizeof(group_on) / sizeof(group_on[0]);
  printf("%d\n", sizeof(group_on));


  WriteToStorageCmd(group_on, dataLen,0x00,buf); 

  // byte group = 0; // 示例组号int
  // len = IrStudy_data(buf, group); // 调用IrStudy_data并获取命令帧长度

  // 打印buf的内容
  for (int i = 0; i < dataLen+10; ++i)
  {
      printf(" %02X ", buf[i]); // 使用%02X以十六进制格式打印每个字节
  }
  printf("complete!");
  printf("\n");

  // 打印len的值
  printf("Command length: %d\n", dataLen);
  
  // // 正确累加group_on数组的元素值
  // uint32_t a = 0; // 更改为合适的无符号整型，确保足够大以容纳累加值
  // for (byte i = 0; i < dataLen; ++i)
  // {
  //     a += group_on[i];
  // }
  // printf("%u\n", a); // 使用%u打印无符号整数
  // printf("1\n");

}

